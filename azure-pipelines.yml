# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

jobs:
- job: Tor_Plus_For_Linux

  pool:
    name: Ubuntu_Pool

  steps:
  - script: |
      ./autogen.sh
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'autogen'

  - script: |
      ./configure
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'configure'

  - script: |
      make
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'make'

  - script: |
      make test
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'make test'

  - template: azure-artefacts-template.yml
    parameters:
      OSName: linux
      ExeExt: ''

- job: Tor_Plus_For_Windows

  pool:
    name: Windows_Pool

  steps:
  - script: |
      echo %PATH%
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Show PATH'

  - script: |
      "c:/msys64/usr/bin/bash" -e -c "autoreconf -i"
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'autogen'

  - script: |
      "c:/msys64/usr/bin/bash" -e -c "MAKE='mingw32-make' ZSTD_CFLAGS='-L/mingw64/include' ZSTD_LIBS='-L/mingw64/lib -lzstd' ./configure --prefix=/mingw64 --build=x86_64-w64-mingw32 --host=x86_64-w64-mingw32 --with-openssl-dir=/mingw64 --disable-asciidoc --disable-gcc-hardening CFLAGS='-D__USE_MINGW_ANSI_STDIO=0 -mwindows'"
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'configure'

  - script: |
      "c:/msys64/usr/bin/bash" -e -c "V=1 mingw32-make -k -j1"
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'make'

  - script: |
      "c:/msys64/usr/bin/bash" -e -c "V=1 mingw32-make -k test | true"
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'make test'

  - template: azure-artefacts-template.yml
    parameters:
      OSName: windows
      ExeExt: '.exe'

#- job: Tor_Plus_For_macOS
#
#  pool:
#    vmImage: 'macOS-latest'
#
#  steps:
#  - script: |
#      brew install automake make
#    displayName: 'install packeges'
#
#  - script: |
#      ./autogen.sh
#    workingDirectory: $(Build.SourcesDirectory)
#    displayName: 'autogen'
#
#  - script: |
#      ./configure
#    workingDirectory: $(Build.SourcesDirectory)
#    displayName: 'configure'
#
#  - script: |
#      make
#    workingDirectory: $(Build.SourcesDirectory)
#    displayName: 'make'
#
#  - script: |
#      make test
#    workingDirectory: $(Build.SourcesDirectory)
#    displayName: 'make test'
#
#  - template: azure-artefacts-template.yml
#    parameters:
#      OSName: linux
#      ExeExt: ''
